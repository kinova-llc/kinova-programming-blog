---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Webアプリってどんな仕組み？ - 初心者向け Webアプリ開発講座">
  <div class="container mx-auto px-4 py-12">
    <div class="max-w-4xl mx-auto">
      <!-- ヘッダーセクション -->
      <div class="bg-gradient-to-r from-kinova-teal to-kinova-orange rounded-lg shadow-lg overflow-hidden mb-12">
        <div class="p-8 text-white">
          <div class="flex items-center gap-2 mb-4">
            <span class="text-sm bg-white/20 px-3 py-1 rounded-full">プログラミング入門</span>
            <span class="text-sm">2025年1月15日</span>
          </div>
          <h1 class="text-4xl font-bold mb-4">Webアプリってどんな仕組み？</h1>
          <p class="text-xl opacity-90 mb-6">
            スマホやパソコンで毎日使っているWebアプリ。その裏側では何が起きているの？初心者にも分かりやすく、Webアプリの基本的な仕組みを解説します！
          </p>
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 rounded-full bg-white flex items-center justify-center text-kinova-teal">
              <span class="text-xl">👩‍💻</span>
            </div>
            <div>
              <p class="font-medium">Kinova編集部</p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- 目次 -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-12">
        <h2 class="text-xl font-semibold mb-4 text-kinova-gray">目次</h2>
        <ul class="space-y-3">
          <li>
            <a href="#button-click" class="flex items-center text-kinova-teal hover:text-kinova-orange transition-colors">
              <span class="w-6 h-6 rounded-full bg-kinova-teal/10 flex items-center justify-center mr-2 text-kinova-teal">4</span>
              「ボタンを押すと何が起きるの？」
            </a>
          </li>
          <li>
            <a href="#data-flow" class="flex items-center text-kinova-teal hover:text-kinova-orange transition-colors">
              <span class="w-6 h-6 rounded-full bg-kinova-teal/10 flex items-center justify-center mr-2 text-kinova-teal">5</span>
              Webアプリの中でデータがどう動くのか
            </a>
          </li>
          <li>
            <a href="#todo-app" class="flex items-center text-kinova-teal hover:text-kinova-orange transition-colors">
              <span class="w-6 h-6 rounded-full bg-kinova-teal/10 flex items-center justify-center mr-2 text-kinova-teal">6</span>
              実際のアプリの動きを見てみよう：Todoアプリの例
            </a>
          </li>
        </ul>
      </div>
      
      <!-- 本文 -->
      <div class="space-y-12">
        <!-- ボタンを押すと何が起きるの？ -->
        <section id="button-click" class="bg-white rounded-lg shadow-md p-8">
          <h2 class="text-2xl font-bold text-kinova-gray mb-6 flex items-center">
            <span class="w-8 h-8 rounded-full bg-kinova-teal text-white flex items-center justify-center mr-3 text-sm">4</span>
            「ボタンを押すと何が起きるの？」
          </h2>
          
          <p class="text-gray-700 mb-6">
            SNSの「いいね」ボタンや、オンラインショップの「カートに入れる」ボタンなど、
            私たちは毎日たくさんのボタンをクリックしています。
            では、ボタンをクリックしたとき、裏側では何が起きているのでしょうか？
          </p>
          
          <div class="bg-gradient-to-r from-pink-100 to-red-100 p-6 rounded-lg mb-6">
            <div class="relative mb-6">
              <div class="bg-white rounded-lg shadow-md p-4 border-2 border-pink-300">
                <h4 class="font-semibold text-pink-700 text-center mb-4">SNSの「いいね👍」ボタンを例に見てみよう</h4>
                
                <div class="flex flex-col items-center">
                  <!-- Interactive button example -->
                  <div class="bg-gray-100 rounded-lg p-4 w-full max-w-md mb-6">
                    <div class="flex items-center justify-between">
                      <div class="flex items-center">
                        <div class="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center text-lg">
                          😊
                        </div>
                        <div class="ml-3">
                          <p class="font-medium">ユーザー名</p>
                          <p class="text-sm text-gray-500">今日も楽しく勉強中！</p>
                        </div>
                      </div>
                    </div>
                    <div class="mt-3 flex justify-end">
                      <button class="flex items-center text-pink-600 bg-pink-100 hover:bg-pink-200 px-3 py-1 rounded-full transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                          <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z" />
                        </svg>
                        いいね！ <span class="ml-1 bg-white px-1 rounded-full">24</span>
                      </button>
                    </div>
                  </div>
                  
                  <!-- Process flow -->
                  <div class="w-full max-w-lg">
                    <ol class="relative border-l-2 border-pink-400">
                      <li class="mb-6 ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">1</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">ボタンをクリック！</h5>
                        <p class="text-gray-700">
                          ユーザーが「いいね」ボタンをクリックすると、ブラウザがそのクリックを検知します。
                        </p>
                      </li>
                      <li class="mb-6 ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">2</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">JavaScriptが動き出す</h5>
                        <p class="text-gray-700">
                          クリックを検知したJavaScriptが、「いいね」の情報をサーバーに送る準備をします。
                        </p>
                      </li>
                      <li class="mb-6 ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">3</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">サーバーに情報を送信</h5>
                        <p class="text-gray-700">
                          「誰が」「どの投稿に」いいねしたのか、という情報がサーバーに送られます。
                        </p>
                      </li>
                      <li class="mb-6 ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">4</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">サーバーが処理</h5>
                        <p class="text-gray-700">
                          サーバーは「いいね」の数を1増やし、データベースに保存します。
                        </p>
                      </li>
                      <li class="mb-6 ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">5</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">結果を返す</h5>
                        <p class="text-gray-700">
                          処理が成功したことと、新しい「いいね」の数をブラウザに返します。
                        </p>
                      </li>
                      <li class="ml-6">
                        <span class="absolute flex items-center justify-center w-8 h-8 bg-pink-200 rounded-full -left-4 ring-4 ring-white">
                          <span class="text-pink-600 font-bold">6</span>
                        </span>
                        <h5 class="font-semibold text-pink-600">画面を更新</h5>
                        <p class="text-gray-700">
                          ブラウザは新しい「いいね」の数を表示し、ボタンの色を変えて「いいね済み」を示します。
                        </p>
                      </li>
                    </ol>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="text-center text-sm text-pink-700 bg-pink-50 p-3 rounded-lg">
              このように、一つのボタンクリックでも、裏側では複数の処理が瞬時に行われています。<br>
              これらの処理が素早く行われることで、私たちはストレスなくWebアプリを使うことができるのです。
            </div>
          </div>
          
          <div class="bg-red-50 border-l-4 border-red-400 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <p class="text-sm text-red-700">
                  <strong>ポイント：</strong> 実は、「いいね」以外のボタン（「フォロー」「シェア」「カートに入れる」など）も、
                  基本的な流れは同じです。ボタンをクリックしたときの処理内容が異なるだけで、
                  「ユーザーの操作」→「サーバーでの処理」→「画面の更新」という流れは共通しています。
                </p>
              </div>
            </div>
          </div>
        </section>
        
        <!-- データがどう動くのか -->
        <section id="data-flow" class="bg-white rounded-lg shadow-md p-8">
          <h2 class="text-2xl font-bold text-kinova-gray mb-6 flex items-center">
            <span class="w-8 h-8 rounded-full bg-kinova-teal text-white flex items-center justify-center mr-3 text-sm">5</span>
            Webアプリの中でデータがどう動くのか
          </h2>
          
          <p class="text-gray-700 mb-6">
            Webアプリを使うとき、私たちはさまざまなデータを扱っています。
            例えば、SNSでの投稿、オンラインショップでの注文情報、メッセージアプリでのチャット内容など。
            これらのデータは、どのように保存され、どのように動いているのでしょうか？
          </p>
          
          <div class="bg-gradient-to-r from-amber-100 to-yellow-100 p-6 rounded-lg mb-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
              <div>
                <div class="bg-white rounded-lg shadow-md p-4 border-2 border-amber-300 h-full">
                  <h4 class="font-semibold text-amber-700 flex items-center mb-3">
                    <span class="text-2xl mr-2">📱</span>
                    スマホやパソコンで扱うデータ
                  </h4>
                  <ul class="space-y-2">
                    <li class="flex items-start">
                      <span class="bg-amber-200 text-amber-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">👤</span>
                      <div>
                        <span class="font-semibold text-amber-800">ユーザーの入力</span>：メッセージ、コメント、検索キーワードなど
                      </div>
                    </li>
                    <li class="flex items-start">
                      <span class="bg-amber-200 text-amber-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">📝</span>
                      <div>
                        <span class="font-semibold text-amber-800">一時的な情報</span>：入力途中の内容、選択した商品など
                      </div>
                    </li>
                    <li class="flex items-start">
                      <span class="bg-amber-200 text-amber-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">🔑</span>
                      <div>
                        <span class="font-semibold text-amber-800">設定情報</span>：ログイン状態、表示設定など
                      </div>
                    </li>
                  </ul>
                </div>
              </div>
              
              <div>
                <div class="bg-white rounded-lg shadow-md p-4 border-2 border-yellow-300 h-full">
                  <h4 class="font-semibold text-yellow-700 flex items-center mb-3">
                    <span class="text-2xl mr-2">💾</span>
                    サーバーで保存するデータ
                  </h4>
                  <ul class="space-y-2">
                    <li class="flex items-start">
                      <span class="bg-yellow-200 text-yellow-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">👥</span>
                      <div>
                        <span class="font-semibold text-yellow-800">ユーザー情報</span>：アカウント情報、プロフィールなど
                      </div>
                    </li>
                    <li class="flex items-start">
                      <span class="bg-yellow-200 text-yellow-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">📊</span>
                      <div>
                        <span class="font-semibold text-yellow-800">投稿データ</span>：SNSの投稿、コメント、「いいね」など
                      </div>
                    </li>
                    <li class="flex items-start">
                      <span class="bg-yellow-200 text-yellow-800 rounded-full w-6 h-6 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">🛒</span>
                      <div>
                        <span class="font-semibold text-yellow-800">取引情報</span>：注文履歴、支払い情報など
                      </div>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            
            <div class="bg-white rounded-lg shadow-md p-4 border-2 border-amber-200 mb-4">
              <h4 class="font-semibold text-amber-700 flex items-center mb-3">
                <span class="text-2xl mr-2">🔄</span>
                データの流れ：オンラインショップでの買い物を例に
              </h4>
              
              <div class="relative">
                <div class="flex flex-wrap justify-center gap-4 mb-4">
                  <div class="flex flex-col items-center">
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">🛍️</span>
                      <span class="font-semibold">商品選択</span>
                    </div>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <svg class="w-6 h-6 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                  </div>
                  
                  <div class="flex flex-col items-center">
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">🛒</span>
                      <span class="font-semibold">カートに追加</span>
                    </div>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <svg class="w-6 h-6 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                  </div>
                  
                  <div class="flex flex-col items-center">
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">📝</span>
                      <span class="font-semibold">注文情報入力</span>
                    </div>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <svg class="w-6 h-6 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                  </div>
                </div>
                
                <div class="flex flex-wrap justify-center gap-4">
                  <div class="flex flex-col items-center">
                    <svg class="w-6 h-6 text-amber-500 rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">📦</span>
                      <span class="font-semibold">注文完了</span>
                    </div>
                  </div>
                  
                  <div class="flex flex-col items-center">
                    <svg class="w-6 h-6 text-amber-500 rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">💳</span>
                      <span class="font-semibold">決済処理</span>
                    </div>
                  </div>
                  
                  <div class="flex flex-col items-center">
                    <svg class="w-6 h-6 text-amber-500 rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                    </svg>
                    <div class="h-6 w-0.5 bg-amber-300 my-1"></div>
                    <div class="bg-amber-100 text-amber-800 rounded-lg p-3 shadow-sm w-32 text-center">
                      <span class="text-2xl block">✅</span>
                      <span class="font-semibold">注文確認</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="text-center text-sm text-amber-700 bg-amber-50 p-3 rounded-lg">
              このように、Webアプリでは、ユーザーの操作に応じて様々なデータが行き来しています。<br>
              それぞれのデータは適切な場所に保存され、必要なときに取り出して使われるのです。
            </div>
          </div>
          
          <div class="bg-amber-50 border-l-4 border-amber-400 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-amber-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <p class="text-sm text-amber-700">
                  <strong>なぜデータを使い分けるの？</strong> 例えば、買い物かごの中身は一時的なものなので、
                  ブラウザ側で保持します。一方、実際の注文情報は大切なので、サーバーのデータベースにしっかりと
                  保存します。このように、データの性質に応じて保存場所を使い分けることで、安全で使いやすい
                  Webアプリを作ることができます。
                </p>
              </div>
            </div>
          </div>
        </section>
        
        <!-- Todoアプリの例 -->
        <section id="todo-app" class="bg-white rounded-lg shadow-md p-8">
          <h2 class="text-2xl font-bold text-kinova-gray mb-6 flex items-center">
            <span class="w-8 h-8 rounded-full bg-kinova-teal text-white flex items-center justify-center mr-3 text-sm">6</span>
            実際のアプリの動きを見てみよう：Todoアプリの例
          </h2>
          
          <p class="text-gray-700 mb-6">
            ここまで説明してきた仕組みを、実際のアプリで確認してみましょう。
            シンプルなTodoアプリを例に、Webアプリケーションがどのように動作するのか見ていきます。
          </p>
          
          <div class="bg-gradient-to-r from-emerald-100 to-green-100 p-6 rounded-lg mb-6">
            <h3 class="text-lg font-semibold text-center text-emerald-700 mb-4">シンプルなTodoアプリ</h3>
            
            <div class="bg-white rounded-lg shadow-md p-4 border-2 border-emerald-300 mb-6">
              <div class="flex justify-center mb-4">
                <div class="bg-gray-100 rounded-lg p-4 w-full max-w-md">
                  <h4 class="text-lg font-semibold text-emerald-700 mb-3">やることリスト</h4>
                  
                  <div class="flex mb-4">
                    <input 
                      type="text" 
                      id="course-demo-new-task" 
                      placeholder="新しいタスクを入力..." 
                      class="flex-grow px-3 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-emerald-500" 
                    />
                    <button 
                      id="course-demo-add-task" 
                      class="bg-emerald-500 text-white px-4 py-2 rounded-r-md hover:bg-emerald-600 transition-colors"
                    >
                      追加
                    </button>
                  </div>
                  
                  <ul id="course-demo-task-list" class="space-y-2">
                    <!-- タスクはJavaScriptで動的に追加されます -->
                  </ul>
                  
                  <div class="mt-6 text-center">
                    <p id="course-demo-task-count" class="text-gray-600">タスク: 0件</p>
                  </div>
                </div>
              </div>
              
              <div class="bg-gray-50 p-4 rounded-lg">
                <h5 class="font-semibold text-emerald-700 mb-2">このTodoアプリの仕組み</h5>
                <ol class="list-decimal ml-6 space-y-2 text-gray-700">
                  <li>ユーザーが新しいタスクを入力して「追加」ボタンをクリック</li>
                  <li>JavaScriptが入力された内容を取得</li>
                  <li>新しいタスクをリストに追加して画面に表示</li>
                   ```html
                  <li>タスクの情報をブラウザのローカルストレージに保存</li>
                  <li>チェックボックスをクリックすると、タスクの完了状態を切り替え</li>
                  <li>削除ボタンをクリックすると、タスクをリストから削除</li>
                  <li>変更があるたびに、ローカルストレージの内容も更新</li>
                </ol>
              </div>
            </div>
            
            <div class="text-center text-sm text-emerald-700 bg-emerald-50 p-3 rounded-lg">
              このTodoアプリは、学習用に簡略化されているため、データをブラウザ内に保存しています。<br>
              実際のWebアプリでは、データをサーバーのデータベースに保存することで、<br>
              複数のユーザーでデータを共有したり、異なるデバイスからアクセスできるようにします。
            </div>
          </div>
          
          <div class="bg-white rounded-lg shadow-md p-6 border-2 border-kinova-teal">
            <h4 class="font-semibold text-kinova-teal text-lg mb-4">Webアプリの仕組みをまとめると...</h4>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
              <div class="bg-kinova-teal/10 rounded-lg p-6 text-center">
                <span class="text-4xl block mb-3">🌐</span>
                <h5 class="font-semibold text-kinova-teal mb-2">クライアント</h5>
                <p class="text-sm text-gray-700">
                  ユーザーが直接操作する部分。<br>
                  ブラウザ上で動作し、画面表示や入力を担当。
                </p>
              </div>
              
              <div class="bg-kinova-orange/10 rounded-lg p-6 text-center">
                <span class="text-4xl block mb-3">🔄</span>
                <h5 class="font-semibold text-kinova-orange mb-2">通信</h5>
                <p class="text-sm text-gray-700">
                  クライアントとサーバー間の<br>
                  データのやり取り。<br>
                  リクエストとレスポンス。
                </p>
              </div>
              
              <div class="bg-kinova-green/10 rounded-lg p-6 text-center">
                <span class="text-4xl block mb-3">🖥️</span>
                <h5 class="font-semibold text-green-600 mb-2">サーバー</h5>
                <p class="text-sm text-gray-700">
                  データの処理や保存を担当。<br>
                  ビジネスロジックを実行し、<br>
                  結果をクライアントに返す。
                </p>
              </div>
            </div>
            
            <div class="text-center p-4 bg-gray-50 rounded-lg">
              <p class="text-gray-700">
                これらの要素が連携することで、ユーザーは自分のデバイスから<br>
                世界中のサービスにアクセスし、情報を閲覧したり、データを送信したりできるのです。
              </p>
            </div>
          </div>
        </section>
      </div>

      <div class="flex justify-between items-center">
        <a href="/kinova-programming-kyozai/course/web-app-basics1" class="inline-flex items-center text-kinova-teal hover:text-kinova-orange transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          前編
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Todoアプリのデモ機能を実装するJavaScript
  document.addEventListener('DOMContentLoaded', () => {
    const newTaskInput = document.getElementById('course-demo-new-task');
    const addTaskButton = document.getElementById('course-demo-add-task');
    const taskList = document.getElementById('course-demo-task-list');
    const taskCount = document.getElementById('course-demo-task-count');
    
    if (!newTaskInput || !addTaskButton || !taskList || !taskCount) {
      console.error('Required elements not found');
      return;
    }
    
    // ローカルストレージからタスクを取得
    let tasks = JSON.parse(localStorage.getItem('course-demo-tasks') || '[]');
    
    // タスクを表示する関数
    const renderTasks = () => {
      if (!taskList || !taskCount) return;
      
      taskList.innerHTML = '';
      
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.className = 'flex items-center justify-between bg-white p-3 rounded-md shadow-sm border border-gray-200';
        
        const leftDiv = document.createElement('div');
        leftDiv.className = 'flex items-center';
        
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.className = 'mr-3 h-5 w-5 text-emerald-500';
        checkbox.checked = task.completed;
        checkbox.addEventListener('change', () => toggleTask(index));
        
        const span = document.createElement('span');
        span.textContent = task.text;
        if (task.completed) {
          span.className = 'line-through text-gray-500';
        }
        
        leftDiv.appendChild(checkbox);
        leftDiv.appendChild(span);
        
        const deleteButton = document.createElement('button');
        deleteButton.className = 'text-red-500 hover:text-red-700';
        deleteButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
          </svg>
        `;
        deleteButton.addEventListener('click', () => deleteTask(index));
        
        li.appendChild(leftDiv);
        li.appendChild(deleteButton);
        
        taskList.appendChild(li);
      });
      
      // タスク数を更新
      taskCount.textContent = `タスク: ${tasks.length}件`;
    };
    
    // タスクを追加する関数
    const addTask = () => {
      if (!newTaskInput) return;
      
      const text = newTaskInput.value.trim();
      if (text) {
        const newTask = {
          id: Date.now().toString(),
          text,
          completed: false
        };
        
        tasks.push(newTask);
        saveTasks();
        newTaskInput.value = '';
        renderTasks();
      }
    };
    
    // タスクの完了状態を切り替える関数
    const toggleTask = (index) => {
      tasks[index].completed = !tasks[index].completed;
      saveTasks();
      renderTasks();
    };
    
    // タスクを削除する関数
    const deleteTask = (index) => {
      tasks.splice(index, 1);
      saveTasks();
      renderTasks();
    };
    
    // ローカルストレージにタスクを保存する関数
    const saveTasks = () => {
      localStorage.setItem('course-demo-tasks', JSON.stringify(tasks));
    };
    
    // イベントリスナーを設定
    addTaskButton.addEventListener('click', addTask);
    newTaskInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        addTask();
      }
    });
    
    // 初期表示
    renderTasks();
    
    // サンプルタスクを追加（初回のみ）
    if (tasks.length === 0) {
      tasks = [
        { id: '1', text: 'メールを確認する', completed: true },
        { id: '2', text: '牛乳を買う', completed: false },
        { id: '3', text: 'プログラミングの勉強をする', completed: false }
      ];
      saveTasks();
      renderTasks();
    }
  });
</script>
```